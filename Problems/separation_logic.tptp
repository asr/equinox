cnf(axiom, axiom, (
 ~in(X,empty)
)).

cnf(axiom, axiom, (
 ~in(X,delete(X,H))
)).

cnf(axiom, axiom, (
 ~in(X,delete(Y,H)) | in(X,H)
)).

cnf(axiom, axiom, (
 ~in(X,H) | eat(pto(X,find(X,H)),H,delete(X,H))
)).

cnf(axiom, axiom, (
 ~eat(pto(X,Y),H1,H2) | in(X,H1)
)).

cnf(axiom, axiom, (
 ~eat(pto(X,Y),H1,H2) | ~in(X,H2)
)).

cnf(axiom, axiom, (
 ~eat(pto(X,Y),H1,H2) | find(X,H1)=Y
)).

cnf(axiom, axiom, (
 ~eat(pto(X,Y),H1,H2) | find(X1,H2)=find(X1,H1) | X=X1
)).

cnf(axiom, axiom, (
 ~eat(A,H1,H2) | ~eat(B,H2,H3) | eat(B,H1,swap(H1,H2,H3))
)).

cnf(axiom, axiom, (
 ~eat(A,H1,H2) | ~eat(B,H2,H3) | eat(A,swap(H1,H2,H3),H3)
)).

% tests

% trivial tests, I don't even bother with these:
%  emp			==>  emp
%  x |-> y		==>  x |-> y
%  x |-> y * x = y 	==>  y |-> y
%  x |-> y * x = z * z |-> y ==> false
%  x |-> y      	==> x |-> y \/ z |-> y 
%  x |-> y 		==> exists w. x |-> w

%  x |-> y * x |-> z 	==>  false 

fof(c, conjecture,
![X,Y,Z,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(X,Z),H2,H3)
  ) => $false 
)).

%  x |-> y * x |-> y 	==>  false 

fof(c, conjecture,
![X,Y,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(X,Y),H2,H3)
  ) => $false 
)).

%  x |-> y * z |-> y   	==> x != z

fof(c, conjecture,
![X,Y,Z,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(Z,Y),H2,H3)
  ) => X != Z 
)).

%  x |-> y * z |-> y   	==> z |-> y * x |-> y 

fof(c, conjecture,
![X,Y,Z,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(Z,Y),H2,H3)
  ) =>
  ?[H2] :
  ( eat(pto(Z,Y),H1,H2)
  & eat(pto(X,Y),H2,H3)
  )
)).

%  x |-> y * (z |-> y \/ x |-> y) ==> x |-> y * z |-> y

fof(c, conjecture,
![X,Y,Z,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & (eat(pto(Z,Y),H2,H3) | eat(pto(X,Y),H2,H3))
  ) =>
  ?[H2] :
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(Z,Y),H2,H3)
  )
)).

%  x |-> y * y |-> z	==> exists w. x |-> w * w |-> z

fof(c, conjecture,
![X,Y,Z,H1,H2,H3] : (
  ( eat(pto(X,Y),H1,H2)
  & eat(pto(Y,Z),H2,H3)
  ) =>
  ?[H2,W] :
  ( eat(pto(X,W),H1,H2)
  & eat(pto(W,Z),H2,H3)
  )
)).


